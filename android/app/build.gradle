plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt' // Without this databinding does not work correctly
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id "com.github.ben-manes.versions" version "0.42.0"
}

def deploymentBaseUrl = "https://incentives.cs.upb.de"
// Use the following naming scheme for local deployments
// def deploymentBaseUrl = "http://xxx.xxx.xxx.xxx:8009"

android {
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "org.cryptimeleon.incentive.app"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
        compose true
    }
    buildTypes {
        debug {
            buildConfigField "String", "IMAGE_URL_BASEPATH", "\"${deploymentBaseUrl}/assets/\""
            buildConfigField "String", "BASKET_SERVICE_URL", "\"${deploymentBaseUrl}/basket/\""
            buildConfigField "String", "BASKET_SERVICE_TWO_URL", "\"${deploymentBaseUrl}/basket-two/\""
            buildConfigField "String", "INFO_SERVICE_URL", "\"${deploymentBaseUrl}/info/\""
            buildConfigField "String", "PROMOTION_SERVICE_URL", "\"${deploymentBaseUrl}/incentive/\""
        }
        release {
            buildConfigField "String", "IMAGE_URL_BASEPATH", "\"${deploymentBaseUrl}/assets/\""
            buildConfigField "String", "BASKET_SERVICE_URL", "\"${deploymentBaseUrl}/basket/\""
            buildConfigField "String", "BASKET_SERVICE_TWO_URL", "\"${deploymentBaseUrl}/basket-two/\""
            buildConfigField "String", "INFO_SERVICE_URL", "\"${deploymentBaseUrl}/info/\""
            buildConfigField "String", "PROMOTION_SERVICE_URL", "\"${deploymentBaseUrl}/incentive/\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility "1.8"
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    applicationVariants.all { variant ->
        variant.getRuntimeConfiguration().exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.3"
    }
    // Common test classes
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
    namespace 'org.cryptimeleon.incentive.app'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { kotlinOptions.freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"] }

dependencies {
    // Material design 13 dependenciew
    implementation("androidx.compose.material3:material3:1.1.0-alpha07")
    implementation("androidx.compose.material3:material3-window-size-class:1.1.0-alpha07")

    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    implementation 'androidx.test:core-ktx:1.5.0'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"

    // Nice kotlin serialization with polymorphism
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    // Support for activityViewModel to allow shared view models
    implementation "androidx.activity:activity-ktx:1.6.1"
    implementation "androidx.activity:activity-compose:1.6.1"

    implementation "androidx.fragment:fragment-ktx:1.5.5"

    // Room database
    implementation "androidx.room:room-runtime:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"
    annotationProcessor "androidx.room:room-compiler:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"

    // Run coroutines in view model scope/ lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    // Live data
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    // This old version matches the version of okhttp currently used in retrofit2!
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9'

    // Cryptimeleon
    implementation 'org.cryptimeleon.incentive:crypto:1.0.0'
    implementation 'org.cryptimeleon.incentive:promotion:1.0.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Math / Statistics
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // JSON
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Preferences as simple storage solution
    implementation "androidx.datastore:datastore-preferences:1.0.0"


    // ML barcode scanning
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'

    // CameraX dependencies for scanner
    implementation "androidx.camera:camera-camera2:1.3.0-alpha04"
    implementation "androidx.camera:camera-lifecycle:1.3.0-alpha04"
    implementation "androidx.camera:camera-view:1.3.0-alpha04"

    // Onboarding Pager
    implementation "com.google.accompanist:accompanist-pager:0.25.1"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.25.1"

    // https://stackoverflow.com/questions/56639529/duplicate-class-com-google-common-util-concurrent-listenablefuture-found-in-modu
    //implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.google.guava:guava:30.0-android'

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"

    // Jetpack Compose
    implementation "androidx.compose.runtime:runtime:1.3.3"
    implementation "androidx.compose.ui:ui:1.3.3"
    implementation "androidx.compose.foundation:foundation:1.3.1"
    implementation "androidx.compose.foundation:foundation-layout:1.3.1"
    implementation "androidx.compose.material:material:1.3.1"
    implementation "androidx.compose.runtime:runtime-livedata:1.3.3"
    implementation "androidx.compose.ui:ui-tooling:1.3.3"

    // implementation "com.google.android.material:compose-org.cryptimeleon.incentive.app.theme-adapter:$rootProject.composeVersion"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Image loading
    implementation("io.coil-kt:coil-compose:2.1.0")

    // Icons
    implementation "androidx.compose.material:material-icons-extended:1.3.1"

    // QR https://mvnrepository.com/artifact/com.google.zxing/core
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation("com.google.zxing:core:3.5.0")

    // Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.25.0"

    // accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.25.0"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    // Mocking
    testImplementation("org.mockito:mockito-core:4.6.1")
    androidTestImplementation("org.mockito:mockito-core:4.6.1")
    // Nicer assertions, requires Guava!
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "com.google.truth:truth:1.1.3"

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
