name: Default workflow
on:
  push:
    branches:
      - develop
      - main
      - feature/migrate-pipelines
    tags:
      - v*
  pull_request:
    branches:
      - develop
      - main
  # Nightly builds to ensure dependencies don't break anything
  schedule:
    - cron: '00 00 * * *'
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Checkout dependencies
        run: |
          pushd ..
          git clone https://github.com/upbcuk/upb.crypto.craco.git
          pushd upb.crypto.craco
          git checkout protocolupdates
          popd
          git clone https://github.com/upbcuk/upb.crypto.math.git
          popd
      - uses: actions/setup-java@v1
        with:
          java-version: '15.0.1' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - run: ./gradlew build
      - uses: actions/upload-artifact@v2  # Test results
        if: ${{ failure() }}
        with:
          name: test-results
          path: ./*/reports/test/test/*
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')  # Only run this job on tags
    needs: build
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Checkout dependencies
        run: |
          pushd ..
          git clone https://github.com/upbcuk/upb.crypto.craco.git
          pushd upb.crypto.craco
          git checkout protocolupdates
          popd
          git clone https://github.com/upbcuk/upb.crypto.math.git
          popd
      - uses: actions/setup-java@v1
        with:
          java-version: '15.0.1' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Set tag
        id: branch_name
        run: echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      - name: Deploy
        run: ./.github/docker-release.sh
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN}}
